{"pageProps":{"layoutProps":{"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Terraform","url":"/terraform"},{"title":"CDK for Terraform","url":"/terraform/cdktf","isCurrentPage":false},{"title":"CLI Reference"},{"title":"Commands","url":"/terraform/cdktf/cli-reference/commands","isCurrentPage":true}],"sidebarNavDataLevels":[{"levelButtonProps":{"levelDownButtonText":"Terraform Home"},"menuItems":[{"leadingIconName":"home","title":"HashiCorp Developer","href":"/"},{"leadingIconName":"guide","title":"Tutorials","href":"/tutorials"},{"divider":true},{"heading":"Products"},{"leadingIconName":"hcp","title":"HashiCorp Cloud Platform","href":"/hcp"},{"leadingIconName":"terraform","title":"Terraform","href":"/terraform"},{"leadingIconName":"packer","title":"Packer","href":"/packer"},{"leadingIconName":"consul","title":"Consul","href":"/consul"},{"leadingIconName":"vault","title":"Vault","href":"/vault"},{"leadingIconName":"boundary","title":"Boundary","href":"/boundary"},{"leadingIconName":"nomad","title":"Nomad","href":"/nomad"},{"leadingIconName":"waypoint","title":"Waypoint","href":"/waypoint"},{"leadingIconName":"vagrant","title":"Vagrant","href":"/vagrant"}],"showFilterInput":false,"title":"Main Menu"},{"levelButtonProps":{"levelUpButtonText":"Main Menu","levelDownButtonText":"Previous"},"menuItems":[{"title":"Terraform","fullPath":"/terraform","theme":"terraform"},{"title":"Install","fullPath":"/terraform/install"},{"title":"Tutorials","fullPath":"/terraform/tutorials"},{"title":"Documentation","isOpen":true,"routes":[{"title":"About the Docs","fullPath":"/terraform/docs"},{"title":"Configuration Language","fullPath":"/terraform/language"},{"title":"Terraform CLI","fullPath":"/terraform/cli"},{"title":"HCP Terraform","fullPath":"/terraform/cloud-docs"},{"title":"Terraform Enterprise","fullPath":"/terraform/enterprise"},{"title":"CDK for Terraform","fullPath":"/terraform/cdktf"},{"title":"Provider Use","fullPath":"/terraform/language/providers"},{"title":"Plugin Development","fullPath":"/terraform/plugin"},{"title":"Registry Publishing","fullPath":"/terraform/registry"},{"title":"Integration Program","fullPath":"/terraform/docs/partnerships"}]}],"showFilterInput":false,"title":"Terraform","visuallyHideTitle":true},{"backToLinkProps":{"text":"Terraform Home","href":"/terraform"},"levelButtonProps":{"levelUpButtonText":"Terraform Home"},"menuItems":[{"title":"CDK for Terraform","fullPath":"/terraform/cdktf","theme":"terraform"},{"title":"Get Started","href":"/terraform/tutorials/cdktf/cdktf-install","id":"sidebar-nav-item-2"},{"title":"Concepts","routes":[{"title":"Architecture","path":"concepts/cdktf-architecture","filePath":"../docs/cdktf/concepts/cdktf-architecture.mdx","fullPath":"/terraform/cdktf/concepts/cdktf-architecture","id":"sidebar-nav-item-4"},{"title":"HCL Interoperability","path":"concepts/hcl-interoperability","filePath":"../docs/cdktf/concepts/hcl-interoperability.mdx","fullPath":"/terraform/cdktf/concepts/hcl-interoperability","id":"sidebar-nav-item-5"},{"title":"Constructs","path":"concepts/constructs","filePath":"../docs/cdktf/concepts/constructs.mdx","fullPath":"/terraform/cdktf/concepts/constructs","id":"sidebar-nav-item-6"},{"title":"Providers","path":"concepts/providers","filePath":"../docs/cdktf/concepts/providers.mdx","fullPath":"/terraform/cdktf/concepts/providers","id":"sidebar-nav-item-7"},{"title":"Resources","path":"concepts/resources","filePath":"../docs/cdktf/concepts/resources.mdx","fullPath":"/terraform/cdktf/concepts/resources","id":"sidebar-nav-item-8"},{"title":"Modules","path":"concepts/modules","filePath":"../docs/cdktf/concepts/modules.mdx","fullPath":"/terraform/cdktf/concepts/modules","id":"sidebar-nav-item-9"},{"title":"Data Sources","path":"concepts/data-sources","filePath":"../docs/cdktf/concepts/data-sources.mdx","fullPath":"/terraform/cdktf/concepts/data-sources","id":"sidebar-nav-item-10"},{"title":"Variables and Outputs","path":"concepts/variables-and-outputs","filePath":"../docs/cdktf/concepts/variables-and-outputs.mdx","fullPath":"/terraform/cdktf/concepts/variables-and-outputs","id":"sidebar-nav-item-11"},{"title":"Functions","path":"concepts/functions","filePath":"../docs/cdktf/concepts/functions.mdx","fullPath":"/terraform/cdktf/concepts/functions","id":"sidebar-nav-item-12"},{"title":"Iterators","path":"concepts/iterators","filePath":"../docs/cdktf/concepts/iterators.mdx","fullPath":"/terraform/cdktf/concepts/iterators","id":"sidebar-nav-item-13"},{"title":"Remote Backends","path":"concepts/remote-backends","filePath":"../docs/cdktf/concepts/remote-backends.mdx","fullPath":"/terraform/cdktf/concepts/remote-backends","id":"sidebar-nav-item-14"},{"title":"Aspects","path":"concepts/aspects","filePath":"../docs/cdktf/concepts/aspects.mdx","fullPath":"/terraform/cdktf/concepts/aspects","id":"sidebar-nav-item-15"},{"title":"Assets","path":"concepts/assets","filePath":"../docs/cdktf/concepts/assets.mdx","fullPath":"/terraform/cdktf/concepts/assets","id":"sidebar-nav-item-16"},{"title":"Tokens","path":"concepts/tokens","filePath":"../docs/cdktf/concepts/tokens.mdx","fullPath":"/terraform/cdktf/concepts/tokens","id":"sidebar-nav-item-17"},{"title":"Stacks","path":"concepts/stacks","filePath":"../docs/cdktf/concepts/stacks.mdx","fullPath":"/terraform/cdktf/concepts/stacks","id":"sidebar-nav-item-18"}],"id":"sidebar-nav-item-3"},{"title":"Examples and Guides","routes":[{"title":"Examples","path":"examples-and-guides/examples","filePath":"../docs/cdktf/examples-and-guides/examples.mdx","fullPath":"/terraform/cdktf/examples-and-guides/examples","id":"sidebar-nav-item-20"},{"title":"Refactoring Stacks","path":"examples-and-guides/refactoring","filePath":"../docs/cdktf/examples-and-guides/refactoring.mdx","fullPath":"/terraform/cdktf/examples-and-guides/refactoring","id":"sidebar-nav-item-21"}],"id":"sidebar-nav-item-19"},{"title":"Create and Deploy Applications","routes":[{"title":"Project Setup","path":"create-and-deploy/project-setup","filePath":"../docs/cdktf/create-and-deploy/project-setup.mdx","fullPath":"/terraform/cdktf/create-and-deploy/project-setup","id":"sidebar-nav-item-23"},{"title":"Configuration File","path":"create-and-deploy/configuration-file","filePath":"../docs/cdktf/create-and-deploy/configuration-file.mdx","fullPath":"/terraform/cdktf/create-and-deploy/configuration-file","id":"sidebar-nav-item-24"},{"title":"Best Practices","path":"create-and-deploy/best-practices","filePath":"../docs/cdktf/create-and-deploy/best-practices.mdx","fullPath":"/terraform/cdktf/create-and-deploy/best-practices","id":"sidebar-nav-item-25"},{"title":"Environment Variables","path":"create-and-deploy/environment-variables","filePath":"../docs/cdktf/create-and-deploy/environment-variables.mdx","fullPath":"/terraform/cdktf/create-and-deploy/environment-variables","id":"sidebar-nav-item-26"},{"title":"HCP Terraform","path":"create-and-deploy/hcp-terraform","filePath":"../docs/cdktf/create-and-deploy/hcp-terraform.mdx","fullPath":"/terraform/cdktf/create-and-deploy/hcp-terraform","id":"sidebar-nav-item-27"},{"title":"Deployment Patterns","path":"create-and-deploy/deployment-patterns","filePath":"../docs/cdktf/create-and-deploy/deployment-patterns.mdx","fullPath":"/terraform/cdktf/create-and-deploy/deployment-patterns","id":"sidebar-nav-item-28"},{"title":"Performance","path":"create-and-deploy/performance","filePath":"../docs/cdktf/create-and-deploy/performance.mdx","fullPath":"/terraform/cdktf/create-and-deploy/performance","id":"sidebar-nav-item-29"},{"title":"Remote Templates","path":"create-and-deploy/remote-templates","filePath":"../docs/cdktf/create-and-deploy/remote-templates.mdx","fullPath":"/terraform/cdktf/create-and-deploy/remote-templates","id":"sidebar-nav-item-30"},{"title":"AWS Adapter [preview]","path":"create-and-deploy/aws-adapter","filePath":"../docs/cdktf/create-and-deploy/aws-adapter.mdx","fullPath":"/terraform/cdktf/create-and-deploy/aws-adapter","id":"sidebar-nav-item-31"}],"id":"sidebar-nav-item-22"},{"title":"Develop Custom Constructs","routes":[{"title":"Design","path":"develop-custom-constructs/construct-design","filePath":"../docs/cdktf/develop-custom-constructs/construct-design.mdx","fullPath":"/terraform/cdktf/develop-custom-constructs/construct-design","id":"sidebar-nav-item-33"},{"title":"Publishing and Distribution","path":"develop-custom-constructs/publishing-and-distribution","filePath":"../docs/cdktf/develop-custom-constructs/publishing-and-distribution.mdx","fullPath":"/terraform/cdktf/develop-custom-constructs/publishing-and-distribution","id":"sidebar-nav-item-34"}],"id":"sidebar-nav-item-32"},{"title":"Test and Debug","routes":[{"title":"Unit Tests","path":"test/unit-tests","filePath":"../docs/cdktf/test/unit-tests.mdx","fullPath":"/terraform/cdktf/test/unit-tests","id":"sidebar-nav-item-36"},{"title":"Debugging","path":"test/debugging","filePath":"../docs/cdktf/test/debugging.mdx","fullPath":"/terraform/cdktf/test/debugging","id":"sidebar-nav-item-37"}],"id":"sidebar-nav-item-35"},{"title":"CLI Reference","routes":[{"title":"CLI Configuration","path":"cli-reference/cli-configuration","filePath":"../docs/cdktf/cli-reference/cli-configuration.mdx","fullPath":"/terraform/cdktf/cli-reference/cli-configuration","id":"sidebar-nav-item-39"},{"title":"Commands","path":"cli-reference/commands","filePath":"../docs/cdktf/cli-reference/commands.mdx","fullPath":"/terraform/cdktf/cli-reference/commands","id":"sidebar-nav-item-40"}],"id":"sidebar-nav-item-38"},{"title":"API Reference","routes":[{"title":"Overview","path":"api-reference/overview","filePath":"../docs/cdktf/api-reference/overview.mdx","fullPath":"/terraform/cdktf/api-reference/overview","id":"sidebar-nav-item-42"},{"title":"Typescript","path":"api-reference/typescript","filePath":"../docs/cdktf/api-reference/typescript.mdx","fullPath":"/terraform/cdktf/api-reference/typescript","id":"sidebar-nav-item-43"},{"title":"Python","path":"api-reference/python","filePath":"../docs/cdktf/api-reference/python.mdx","fullPath":"/terraform/cdktf/api-reference/python","id":"sidebar-nav-item-44"},{"title":"Java","path":"api-reference/java","filePath":"../docs/cdktf/api-reference/java.mdx","fullPath":"/terraform/cdktf/api-reference/java","id":"sidebar-nav-item-45"},{"title":"C#","path":"api-reference/csharp","filePath":"../docs/cdktf/api-reference/csharp.mdx","fullPath":"/terraform/cdktf/api-reference/csharp","id":"sidebar-nav-item-46"},{"title":"Go","path":"api-reference/go","filePath":"../docs/cdktf/api-reference/go.mdx","fullPath":"/terraform/cdktf/api-reference/go","id":"sidebar-nav-item-47"},{"title":"Providers","path":"api-reference/provider","filePath":"../docs/cdktf/api-reference/provider.mdx","fullPath":"/terraform/cdktf/api-reference/provider","id":"sidebar-nav-item-48"}],"id":"sidebar-nav-item-41"},{"title":"Release","routes":[{"title":"Overview","path":"release","filePath":"../docs/cdktf/release/index.mdx","fullPath":"/terraform/cdktf/release","id":"sidebar-nav-item-50"},{"title":"Upgrading to Version 0.19","path":"release/upgrade-guide-v0-19","filePath":"../docs/cdktf/release/upgrade-guide-v0-19.mdx","fullPath":"/terraform/cdktf/release/upgrade-guide-v0-19","id":"sidebar-nav-item-51"},{"title":"Upgrading to Version 0.18","path":"release/upgrade-guide-v0-18","filePath":"../docs/cdktf/release/upgrade-guide-v0-18.mdx","fullPath":"/terraform/cdktf/release/upgrade-guide-v0-18","id":"sidebar-nav-item-52"},{"title":"Upgrading to Version 0.17","path":"release/upgrade-guide-v0-17","filePath":"../docs/cdktf/release/upgrade-guide-v0-17.mdx","fullPath":"/terraform/cdktf/release/upgrade-guide-v0-17","id":"sidebar-nav-item-53"},{"title":"Upgrading to Version 0.15","path":"release/upgrade-guide-v0-15","filePath":"../docs/cdktf/release/upgrade-guide-v0-15.mdx","fullPath":"/terraform/cdktf/release/upgrade-guide-v0-15","id":"sidebar-nav-item-54"},{"title":"Upgrading to Version 0.13","path":"release/upgrade-guide-v0-13","filePath":"../docs/cdktf/release/upgrade-guide-v0-13.mdx","fullPath":"/terraform/cdktf/release/upgrade-guide-v0-13","id":"sidebar-nav-item-55"},{"title":"Upgrading to Version 0.12","path":"release/upgrade-guide-v0-12","filePath":"../docs/cdktf/release/upgrade-guide-v0-12.mdx","fullPath":"/terraform/cdktf/release/upgrade-guide-v0-12","id":"sidebar-nav-item-56"},{"title":"Upgrading to Version 0.11","path":"release/upgrade-guide-v0-11","filePath":"../docs/cdktf/release/upgrade-guide-v0-11.mdx","fullPath":"/terraform/cdktf/release/upgrade-guide-v0-11","id":"sidebar-nav-item-57"},{"title":"Upgrading to Version 0.10","path":"release/upgrade-guide-v0-10","filePath":"../docs/cdktf/release/upgrade-guide-v0-10.mdx","fullPath":"/terraform/cdktf/release/upgrade-guide-v0-10","id":"sidebar-nav-item-58"},{"title":"Upgrading to Version 0.9","path":"release/upgrade-guide-v0-9","filePath":"../docs/cdktf/release/upgrade-guide-v0-9.mdx","fullPath":"/terraform/cdktf/release/upgrade-guide-v0-9","id":"sidebar-nav-item-59"},{"title":"Upgrading to Version 0.7","path":"release/upgrade-guide-v0-7","filePath":"../docs/cdktf/release/upgrade-guide-v0-7.mdx","fullPath":"/terraform/cdktf/release/upgrade-guide-v0-7","id":"sidebar-nav-item-60"},{"title":"Upgrading to Version 0.6","path":"release/upgrade-guide-v0-6","filePath":"../docs/cdktf/release/upgrade-guide-v0-6.mdx","fullPath":"/terraform/cdktf/release/upgrade-guide-v0-6","id":"sidebar-nav-item-61"}],"id":"sidebar-nav-item-49"},{"title":"Community","path":"community","filePath":"../docs/cdktf/community.mdx","fullPath":"/terraform/cdktf/community","id":"sidebar-nav-item-62"},{"title":"Telemetry","path":"telemetry","filePath":"../docs/cdktf/telemetry.mdx","fullPath":"/terraform/cdktf/telemetry","id":"sidebar-nav-item-63"}],"title":"CDK for Terraform","visuallyHideTitle":true}],"mainWidth":"narrow","githubFileUrl":"https://github.com/hashicorp/terraform-cdk/blob/main/website/../docs/cdktf/cli-reference/commands.mdx"},"metadata":{"title":"CLI Commands - CDK for Terraform","description":"Use the CLI to initialize a new project, deploy your CDKTF app, generate Terraform configuration files, and more.","layout":null},"outlineItems":[{"title":"CLI Commands","url":"#cli-commands","dataHeapTrack":"toc-list-item-index-0"},{"title":"completion","url":"#completion","dataHeapTrack":"toc-list-item-index-1"},{"title":"convert","url":"#convert","dataHeapTrack":"toc-list-item-index-2"},{"title":"deploy","url":"#deploy","dataHeapTrack":"toc-list-item-index-3"},{"title":"destroy","url":"#destroy","dataHeapTrack":"toc-list-item-index-4"},{"title":"diff","url":"#diff","dataHeapTrack":"toc-list-item-index-5"},{"title":"get","url":"#get","dataHeapTrack":"toc-list-item-index-6"},{"title":"init","url":"#init","dataHeapTrack":"toc-list-item-index-7"},{"title":"login","url":"#login","dataHeapTrack":"toc-list-item-index-8"},{"title":"synth","url":"#synth","dataHeapTrack":"toc-list-item-index-9"},{"title":"watch","url":"#watch","dataHeapTrack":"toc-list-item-index-10"},{"title":"output","url":"#output","dataHeapTrack":"toc-list-item-index-11"},{"title":"debug","url":"#debug","dataHeapTrack":"toc-list-item-index-12"},{"title":"provider add","url":"#provider-add","dataHeapTrack":"toc-list-item-index-13"},{"title":"provider upgrade","url":"#provider-upgrade","dataHeapTrack":"toc-list-item-index-14"},{"title":"provider list","url":"#provider-list","dataHeapTrack":"toc-list-item-index-15"}],"pageHeading":{"id":"cli-commands","title":"CLI Commands"},"mdxSource":{"compiledSource":"const layoutProps={};const MDXLayout=\"wrapper\";function MDXContent({components,...props}){return mdx(MDXLayout,{...layoutProps,...props,components:components,mdxType:\"MDXLayout\"},mdx(\"p\",null,`The CDK for Terraform CLI has the following commands:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cdktf/cli-reference/commands#completion\"},`completion`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cdktf/cli-reference/commands#convert\"},`convert`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cdktf/cli-reference/commands#debug\"},`debug`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cdktf/cli-reference/commands#deploy\"},`deploy`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cdktf/cli-reference/commands#destroy\"},`destroy`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cdktf/cli-reference/commands#diff\"},`diff`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cdktf/cli-reference/commands#get\"},`get`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cdktf/cli-reference/commands#init\"},`init`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cdktf/cli-reference/commands#login\"},`login`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cdktf/cli-reference/commands#output\"},`output`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cdktf/cli-reference/commands#provider-add\"},`provider add`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cdktf/cli-reference/commands#provider-upgrade\"},`provider upgrade`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cdktf/cli-reference/commands#provider-list\"},`provider list`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cdktf/cli-reference/commands#synth\"},`synth`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cdktf/cli-reference/commands#watch\"},`watch`))),mdx(\"h2\",{\"id\":\"completion\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#completion\",\"aria-label\":\"completion permalink\"},`\\xbb`),`completion`),mdx(\"p\",null,`This command outputs a script that you can use to set up autocompletion for bash or zsh.`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`> cdktf completion`,`\n`,`\n`,`#compdef cdktf`,`\n`,`###-begin-cdktf-completions-###`,`\n`,`#`,`\n`,`# yargs command completion script`,`\n`,`#`,`\n`,`# Installation: cdktf completion >> ~/.zshrc`,`\n`,`#    or cdktf completion >> ~/.zsh_profile on OSX.`,`\n`,`#`,`\n`,`_cdktf_yargs_completions()`,`\n`,`{`,`\n`,`  local reply`,`\n`,`  local si=$IFS`,`\n`,`  IFS=$'`,`\n`,`' reply=($(COMP_CWORD=\"$((CURRENT-1))\" COMP_LINE=\"$BUFFER\" COMP_POINT=\"$CURSOR\" cdktf --get-yargs-completions \"\\${words[@]}\"))`,`\n`,`  IFS=$si`,`\n`,`  _describe 'values' reply`,`\n`,`}`,`\n`,`compdef _cdktf_yargs_completions cdktf`,`\n`,`###-end-cdktf-completions-###`,`\n`,`\n`)),mdx(\"p\",null,`The output also contains the installation instructions. For example, here are the instructions for Mac OSX:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`cdktf completion >> ~/.bash_profile on OSX.`,`\n`,`# or if using zsh instead of bash`,`\n`,`cdktf completion >> ~/.zshrc`,`\n`)),mdx(\"p\",null,`After you configure auto completion, reload your shell by running `,mdx(\"inlineCode\",{parentName:\"p\"},`source ~/.zshrc`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`source ~/.bash_profile`),` or opening a new terminal window. You can now autocomplete `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf`),` commands by pressing the `,mdx(\"inlineCode\",{parentName:\"p\"},`<TAB>`),` key. You may need to enter a space after `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf`),` for autocomplete to take effect.`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`> cdktf <TAB>`,`\n`,`completion  -- generate completion script`,`\n`,`convert     -- Converts a single file of HCL configuration to CDK for Terraform. Takes the file to be converted on stdin.`,`\n`,`deploy      -- Deploy the given stacks`,`\n`,`destroy     -- Destroy the given stacks`,`\n`,`diff        -- Perform a diff (terraform plan) for the given stack`,`\n`,`get         -- Generate CDK Constructs for Terraform providers and modules.`,`\n`,`init        -- Create a new cdktf project from a template.`,`\n`,`list        -- List stacks in app.`,`\n`,`login       -- Retrieves an API token to connect to Terraform Cloud.`,`\n`,`synth       -- Synthesizes Terraform code for the given app in a directory.`,`\n`,`watch       -- [experimental] Watch for file changes and automatically trigger a deploy`,`\n`)),mdx(\"h2\",{\"id\":\"convert\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#convert\",\"aria-label\":\"convert permalink\"},`\\xbb`),`convert`),mdx(\"p\",null,`This command converts Terraform configuration written in HCL to the equivalent configuration in your preferred language.`),mdx(\"p\",null,`->`,mdx(\"strong\",{parentName:\"p\"},`Note`),`: The `,mdx(\"inlineCode\",{parentName:\"p\"},`convert`),` command has `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://cdk.tf/convert-limitations\"},`known limitations`),`.`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`cdktf convert`,`\n`,`\n`,`Converts a single file of HCL configuration to CDK for Terraform. Takes the file to be converted on stdin.`,`\n`,`\n`,`Options:`,`\n`,`      --version                                  Show version number                                                                                                           [boolean]`,`\n`,`      --experimental-provider-schema-cache-path  An experimental schema cache that can be used to improve the speed of cdktf get and convert. Supported using the env`,`\n`,`                                                 CDKTF_EXPERIMENTAL_PROVIDER_SCHEMA_CACHE_PATH.                                                                [string] [default: false]`,`\n`,`      --disable-plugin-cache-env                 Dont set TF_PLUGIN_CACHE_DIR automatically. This is useful when the plugin cache is configured differently. Supported using the env`,`\n`,`                                                 CDKTF_DISABLE_PLUGIN_CACHE_ENV.                                                                              [boolean] [default: false]`,`\n`,`      --log-level                                Which log level should be written. Only supported via setting the env CDKTF_LOG_LEVEL                                          [string]`,`\n`,`      --log-file-directory                       The directory path where CDKTF should create \\`cdktf.log\\` and print logs at the \\`debug\\` level. If not set, CDKTF writes logs to standard`,`\n`,`                                                 out at the level specified in \\`CDKTF_LOG_LEVEL\\`. Only supported via setting the env CDKTF_LOG_FILE_DIRECTORY`,`\n`,`      --language                                                                                       [choices: \"typescript\", \"python\", \"csharp\", \"java\", \"go\"] [default: \"typescript\"]`,`\n`,`      --provider                                 The conversion needs to know which providers are used in addition to the ones in your cdktf.json file. We search for a cdktf.json below`,`\n`,`                                                 your current working directory.                                                                                   [array] [default: []]`,`\n`,`      --stack                                    Wrap the generated code within a stack class                                                                 [boolean] [default: false]`,`\n`,`  -h, --help                                     Show help                                                                                                                     [boolean]`,`\n`,`\n`,`Examples:`,`\n`,`  cat main.tf | cdktf convert  --provider integrations/github                                   Takes the HCL content of main.tf and converts it to CDK for Terraform content and prints`,`\n`,`                                                                                                it`,`\n`,`  cat main.tf | cdktf convert --provider hashicorp/aws > imported.ts                            Takes the HCL content of main.tf and converts it to CDK for Terraform content in`,`\n`,`                                                                                                imported.ts`,`\n`,`  cat main.tf | cdktf convert --provider 'hashicorp/aws@ ~>3.62.0' 'integrations/github@        Takes the HCL content of main.tf and converts it to CDK for Terraform content in`,`\n`,`  ~>4.16.0' --language python > imported.py                                                     imported.py`,`\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Examples`)),mdx(\"p\",null,`Convert a local file.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},mdx(\"span\",{parentName:\"code\",\"className\":\"token function\"},`cat`),` main.tf `,mdx(\"span\",{parentName:\"code\",\"className\":\"token operator\"},`|`),` cdktf convert `,mdx(\"span\",{parentName:\"code\",\"className\":\"token operator\"},`>`),` imported.ts`,`\n`)),mdx(\"p\",null,`Convert a local file and wrap it into a `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf.TerraformStack`),` instead of a `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf.Construct`),`.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},mdx(\"span\",{parentName:\"code\",\"className\":\"token function\"},`cat`),` main.tf `,mdx(\"span\",{parentName:\"code\",\"className\":\"token operator\"},`|`),` cdktf convert --stack `,mdx(\"span\",{parentName:\"code\",\"className\":\"token operator\"},`>`),` imported.ts`,`\n`)),mdx(\"p\",null,`Convert HCL in your clipboard to Python on OSX.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`pbpaste `,mdx(\"span\",{parentName:\"code\",\"className\":\"token operator\"},`|`),` cdktf convert --language python `,mdx(\"span\",{parentName:\"code\",\"className\":\"token operator\"},`|`),` pbcopy`,`\n`)),mdx(\"h2\",{\"id\":\"deploy\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#deploy\",\"aria-label\":\"deploy permalink\"},`\\xbb`),`deploy`),mdx(\"p\",null,`This command deploys a given application.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf deploy --help`,`\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Help Output`)),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`cdktf deploy [stacks...]`,`\n`,`\n`,`Deploy the given stacks`,`\n`,`\n`,`Positionals:`,`\n`,`  stacks  Deploy stacks matching the given ids. Required when more than one stack is present in the app                                                            [array] [default: []]`,`\n`,`\n`,`Options:`,`\n`,`      --version                                  Show version number                                                                                                           [boolean]`,`\n`,`      --experimental-provider-schema-cache-path  An experimental schema cache that can be used to improve the speed of cdktf get and convert. Supported using the env`,`\n`,`                                                 CDKTF_EXPERIMENTAL_PROVIDER_SCHEMA_CACHE_PATH.                                                                [string] [default: false]`,`\n`,`      --disable-plugin-cache-env                 Dont set TF_PLUGIN_CACHE_DIR automatically. This is useful when the plugin cache is configured differently. Supported using the env`,`\n`,`                                                 CDKTF_DISABLE_PLUGIN_CACHE_ENV.                                                                              [boolean] [default: false]`,`\n`,`      --log-level                                Which log level should be written. Only supported via setting the env CDKTF_LOG_LEVEL                                          [string]`,`\n`,`      --log-file-directory                       The directory path where CDKTF should create \\`cdktf.log\\` and print logs at the \\`debug\\` level. If not set, CDKTF writes logs to standard`,`\n`,`                                                 out at the level specified in \\`CDKTF_LOG_LEVEL\\`. Only supported via setting the env CDKTF_LOG_FILE_DIRECTORY`,`\n`,`  -a, --app                                      Command to use in order to execute cdktf app                                                [required] [default: \"npx ts-node main.ts\"]`,`\n`,`  -o, --output                                   Output directory for the synthesized Terraform config                                                 [required] [default: \"cdktf.out\"]`,`\n`,`      --auto-approve                             Auto approve                                                                                                 [boolean] [default: false]`,`\n`,`      --outputs-file                             Path to file where stack outputs will be written as JSON                                                                       [string]`,`\n`,`      --outputs-file-include-sensitive-outputs   Whether to include sensitive outputs in the output file                                                      [boolean] [default: false]`,`\n`,`      --ignore-missing-stack-dependencies        Don't check if all stacks specified in the command have their dependencies included as well                  [boolean] [default: false]`,`\n`,`      --parallelism                              Number of concurrent CDKTF stacks to run. Defaults to infinity, denoted by -1                                    [number] [default: -1]`,`\n`,`      --refresh-only                             Select the \"refresh only\" planning mode, which checks whether remote objects still match the outcome of the most recent Terraform apply`,`\n`,`                                                 but does not propose any actions to undo any changes made outside of Terraform.                              [boolean] [default: false]`,`\n`,`      --terraform-parallelism                    Forwards value as the \\`-parallelism\\` flag to Terraform. By default, the this flag is not forwarded to Terraform. Note: This flag is not`,`\n`,`                                                 supported by remote / cloud backend                                                                              [number] [default: -1]`,`\n`,`      --no-color                                 Disables terminal formatting sequences in the output.                                                        [boolean] [default: false]`,`\n`,`      --migrate-state                            Pass this flag after switching state backends to approve a state migration for all targeted stacks           [boolean] [default: false]`,`\n`,`      --var                                      Set a value for one of the input variables in the stack or stacks to apply. Use this option more than once to set more than one`,`\n`,`                                                 variable.                                                                                                         [array] [default: []]`,`\n`,`      --var-file                                 Load variable values from the given file, in addition to the default files terraform.tfvars and *.auto.tfvars. Use this option more`,`\n`,`                                                 than once to include more than one variables file.                                                                [array] [default: []]`,`\n`,`      --skip-synth                               Skip synthesis of the application, assume the synthesized Terraform code is already present and up to date   [boolean] [default: false]`,`\n`,`  -h, --help                                     Show help                                                                                                                     [boolean]`,`\n`)),mdx(\"div\",{\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` The `,mdx(\"inlineCode\",{parentName:\"p\"},`parallelism`),` flag has a different behavior than the `,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cli/commands/apply#parallelism-n\"},`terraform parallelism flag`),`. To set the custom terraform parallelism flag, please use the `,mdx(\"inlineCode\",{parentName:\"p\"},`--terraform-parallelism`),` flag instead.`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Examples`)),mdx(\"p\",null,`Deploy an application.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf deploy`,`\n`)),mdx(\"p\",null,`Deploy an application with automatic approval of the diff (Terraform plan).`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf deploy --auto-approve my-first-stack my-second-stack my-third-stack`,`\n`)),mdx(\"p\",null,`Deploy multiple stacks in one run.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf deploy my-first-stack my-second-stack my-third-stack`,`\n`)),mdx(\"p\",null,`Deploy all stacks in one run:`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf deploy `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`'*'`),`\n`)),mdx(\"p\",null,`Deploy all stacks ending with `,mdx(\"inlineCode\",{parentName:\"p\"},`-production`),` in one run:`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf deploy `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`'*-production'`),`\n`)),mdx(\"p\",null,`If the stacks have dependencies (through cross stack references or by calling `,mdx(\"inlineCode\",{parentName:\"p\"},`myStack.addDependency(otherStack)`),`) deploy will figure out the right order to run.`),mdx(\"p\",null,`For more info on the `,mdx(\"inlineCode\",{parentName:\"p\"},`--outputs-file`),` option, refer to the `,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cdktf/cli-reference/commands#output\"},mdx(\"inlineCode\",{parentName:\"a\"},`output`),` command`),`.`),mdx(\"h2\",{\"id\":\"destroy\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#destroy\",\"aria-label\":\"destroy permalink\"},`\\xbb`),`destroy`),mdx(\"p\",null,`This command destroys a given application.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf destroy --help`,`\n`)),mdx(\"p\",null,`Help output:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`cdktf destroy [stacks..]`,`\n`,`\n`,`Destroy the given stacks`,`\n`,`\n`,`Positionals:`,`\n`,`  stacks  Destroy stacks matching the given ids. Required when more than one stack is present in the app                                                           [array] [default: []]`,`\n`,`\n`,`Options:`,`\n`,`      --version                                  Show version number                                                                                                           [boolean]`,`\n`,`      --experimental-provider-schema-cache-path  An experimental schema cache that can be used to improve the speed of cdktf get and convert. Supported using the env`,`\n`,`                                                 CDKTF_EXPERIMENTAL_PROVIDER_SCHEMA_CACHE_PATH.                                                                [string] [default: false]`,`\n`,`      --disable-plugin-cache-env                 Dont set TF_PLUGIN_CACHE_DIR automatically. This is useful when the plugin cache is configured differently. Supported using the env`,`\n`,`                                                 CDKTF_DISABLE_PLUGIN_CACHE_ENV.                                                                              [boolean] [default: false]`,`\n`,`      --log-level                                Which log level should be written. Only supported via setting the env CDKTF_LOG_LEVEL                                          [string]`,`\n`,`      --log-file-directory                       The directory path where CDKTF should create \\`cdktf.log\\` and print logs at the \\`debug\\` level. If not set, CDKTF writes logs to standard`,`\n`,`                                                 out at the level specified in \\`CDKTF_LOG_LEVEL\\`. Only supported via setting the env CDKTF_LOG_FILE_DIRECTORY`,`\n`,`  -a, --app                                      Command to use in order to execute cdktf app                                                [required] [default: \"npx ts-node main.ts\"]`,`\n`,`  -o, --output                                   Output directory for the synthesized Terraform config                                                 [required] [default: \"cdktf.out\"]`,`\n`,`      --auto-approve                             Auto approve                                                                                                 [boolean] [default: false]`,`\n`,`      --ignore-missing-stack-dependencies        Don't check if all stacks specified in the command have their dependencies included as well                  [boolean] [default: false]`,`\n`,`      --parallelism                              Number of concurrent CDKTF stacks to run. Defaults to infinity, denoted by -1                                    [number] [default: -1]`,`\n`,`      --terraform-parallelism                    Forwards value as the \\`-parallelism\\` flag to Terraform. By default, the this flag is not forwarded to Terraform. Note: This flag is not`,`\n`,`                                                 supported by remote / cloud backend                                                                              [number] [default: -1]`,`\n`,`      --var                                      Set a value for one of the input variables in the stack or stacks to apply. Use this option more than once to set more than one`,`\n`,`                                                 variable.                                                                                                         [array] [default: []]`,`\n`,`      --var-file                                 Load variable values from the given file, in addition to the default files terraform.tfvars and *.auto.tfvars. Use this option more`,`\n`,`                                                 than once to include more than one variables file.                                                                [array] [default: []]`,`\n`,`      --no-color                                 Disables terminal formatting sequences in the output.                                                        [boolean] [default: false]`,`\n`,`      --migrate-state                            Pass this flag after switching state backends to approve a state migration for all targeted stacks           [boolean] [default: false]`,`\n`,`      --skip-synth                               Skip synthesis of the application, assume the synthesized Terraform code is already present and up to date   [boolean] [default: false]`,`\n`,`  -h, --help                                     Show help                                                                                                                     [boolean]`,`\n`)),mdx(\"div\",{\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` The `,mdx(\"inlineCode\",{parentName:\"p\"},`parallelism`),` flag has a different behavior than the `,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cli/commands/apply#parallelism-n\"},`terraform parallelism flag`),`. To set the custom terraform parallelism flag, please use the `,mdx(\"inlineCode\",{parentName:\"p\"},`--terraform-parallelism`),` flag instead.`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Examples`)),mdx(\"p\",null,`Destroy an application.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf destroy`,`\n`)),mdx(\"p\",null,`Destroy an application with automatic approval of the diff (Terraform plan).`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf destroy --auto-approve`,`\n`)),mdx(\"p\",null,`Destroy multiple stacks in one run.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf destroy my-first-stack my-second-stack my-third-stack`,`\n`)),mdx(\"p\",null,`Destroy all stacks in one run:`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf destroy `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`'*'`),`\n`)),mdx(\"p\",null,`Destroy all stacks ending with production in one run:`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf destroy `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`'*-production'`),`\n`)),mdx(\"p\",null,`If the stacks have dependencies (through cross stack references or by calling `,mdx(\"inlineCode\",{parentName:\"p\"},`myStack.addDependency(otherStack)`),`) deploy will figure out the right order to run.`),mdx(\"h2\",{\"id\":\"diff\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#diff\",\"aria-label\":\"diff permalink\"},`\\xbb`),`diff`),mdx(\"p\",null,`This command generates a diff for a given application by running Terraform plan.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf `,mdx(\"span\",{parentName:\"code\",\"className\":\"token function\"},`diff`),` --help`,`\n`)),mdx(\"p\",null,`Help output:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`cdktf diff [stack]`,`\n`,`\n`,`Perform a diff (terraform plan) for the given stack`,`\n`,`\n`,`Positionals:`,`\n`,`  stack  Diff stack which matches the given id only. Required when more than one stack is present in the app                                                                    [string]`,`\n`,`\n`,`Options:`,`\n`,`      --version                                  Show version number                                                                                                           [boolean]`,`\n`,`      --experimental-provider-schema-cache-path  An experimental schema cache that can be used to improve the speed of cdktf get and convert. Supported using the env`,`\n`,`                                                 CDKTF_EXPERIMENTAL_PROVIDER_SCHEMA_CACHE_PATH.                                                                [string] [default: false]`,`\n`,`      --disable-plugin-cache-env                 Dont set TF_PLUGIN_CACHE_DIR automatically. This is useful when the plugin cache is configured differently. Supported using the env`,`\n`,`                                                 CDKTF_DISABLE_PLUGIN_CACHE_ENV.                                                                              [boolean] [default: false]`,`\n`,`      --log-level                                Which log level should be written. Only supported via setting the env CDKTF_LOG_LEVEL                                          [string]`,`\n`,`      --log-file-directory                       The directory path where CDKTF should create \\`cdktf.log\\` and print logs at the \\`debug\\` level. If not set, CDKTF writes logs to standard`,`\n`,`                                                 out at the level specified in \\`CDKTF_LOG_LEVEL\\`. Only supported via setting the env CDKTF_LOG_FILE_DIRECTORY`,`\n`,`  -a, --app                                      Command to use in order to execute cdktf app                                                [required] [default: \"npx ts-node main.ts\"]`,`\n`,`  -o, --output                                   Output directory for the synthesized Terraform config                                                 [required] [default: \"cdktf.out\"]`,`\n`,`      --refresh-only                             Select the \"refresh only\" planning mode, which checks whether remote objects still match the outcome of the most recent Terraform apply`,`\n`,`                                                 but does not propose any actions to undo any changes made outside of Terraform.                              [boolean] [default: false]`,`\n`,`      --terraform-parallelism                    Forwards value as the \\`-parallelism\\` flag to Terraform. By default, the this flag is not forwarded to Terraform. Note: This flag is not`,`\n`,`                                                 supported by remote / cloud backend                                                                              [number] [default: -1]`,`\n`,`      --var                                      Set a value for one of the input variables in the stack. Use this option more than once to set more than one variable.`,`\n`,`                                                                                                                                                                   [array] [default: []]`,`\n`,`      --var-file                                 Load variable values from the given file, in addition to the default files terraform.tfvars and *.auto.tfvars. Use this option more`,`\n`,`                                                 than once to include more than one variables file.                                                                [array] [default: []]`,`\n`,`      --no-color                                 Disables terminal formatting sequences in the output.                                                        [boolean] [default: false]`,`\n`,`      --migrate-state                            Pass this flag after switching state backends to approve a state migration for the targeted stack            [boolean] [default: false]`,`\n`,`      --skip-synth                               Skip synthesis of the application, assume the synthesized Terraform code is already present and up to date   [boolean] [default: false]`,`\n`,`  -h, --help                                     Show help                                                                                                                     [boolean]`,`\n`)),mdx(\"div\",{\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` The `,mdx(\"inlineCode\",{parentName:\"p\"},`parallelism`),` flag has a different behavior than the `,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cli/commands/plan#parallelism-n\"},`terraform parallelism flag`),`. To set the custom terraform parallelism flag, please use the `,mdx(\"inlineCode\",{parentName:\"p\"},`--terraform-parallelism`),` flag instead.`)),mdx(\"p\",null,`Examples:`),mdx(\"p\",null,`Generate a diff for a given application.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf `,mdx(\"span\",{parentName:\"code\",\"className\":\"token function\"},`diff`),`\n`)),mdx(\"h2\",{\"id\":\"get\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#get\",\"aria-label\":\"get permalink\"},`\\xbb`),`get`),mdx(\"p\",null,`This command downloads the providers and modules for an application and\ngenerates CDK constructs for them. It can use the `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf.json`),` configuration file to read the list of providers and modules.\nThis command only generates currently missing provider bindings, so it is very fast if nothing changed.\nThe command does not update the version when you specify loose version constraints in your `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf.json`),` file and have already generated an existing version locally. To update the version anyway, run `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf get --force`),` to recreate all bindings.`),mdx(\"p\",null,`When you change a version constraint, the `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf get`),` command recreates the bindings for that provider.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf get --help`,`\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Help Output`)),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`cdktf get`,`\n`,`\n`,`Generate CDK Constructs for Terraform providers and modules.`,`\n`,`\n`,`Options:`,`\n`,`      --version                                  Show version number                                                                                                           [boolean]`,`\n`,`      --experimental-provider-schema-cache-path  An experimental schema cache that can be used to improve the speed of cdktf get and convert. Supported using the env`,`\n`,`                                                 CDKTF_EXPERIMENTAL_PROVIDER_SCHEMA_CACHE_PATH.                                                                [string] [default: false]`,`\n`,`      --disable-plugin-cache-env                 Dont set TF_PLUGIN_CACHE_DIR automatically. This is useful when the plugin cache is configured differently. Supported using the env`,`\n`,`                                                 CDKTF_DISABLE_PLUGIN_CACHE_ENV.                                                                              [boolean] [default: false]`,`\n`,`      --log-level                                Which log level should be written. Only supported via setting the env CDKTF_LOG_LEVEL                                          [string]`,`\n`,`      --log-file-directory                       The directory path where CDKTF should create \\`cdktf.log\\` and print logs at the \\`debug\\` level. If not set, CDKTF writes logs to standard`,`\n`,`                                                 out at the level specified in \\`CDKTF_LOG_LEVEL\\`. Only supported via setting the env CDKTF_LOG_FILE_DIRECTORY`,`\n`,`  -o, --output                                   Output directory for generated Constructs                                                                    [string] [default: \".gen\"]`,`\n`,`  -l, --language                                 Output programming language       [string] [required] [choices: \"typescript\", \"python\", \"java\", \"csharp\", \"go\"] [default: \"typescript\"]`,`\n`,`      --force                                    Regenerates all generated constructs                                                                         [boolean] [default: false]`,`\n`,`      --parallelism                              Number of concurrently generated provider / module bindings. Only applies for languages that are not Typescript (translated by JSII).`,`\n`,`                                                 Defaults to infinity, denoted by -1                                                                              [number] [default: -1]`,`\n`,`      --show-performance-info                    Shows performance information after generation                                                                                [boolean]`,`\n`,`  -h, --help                                     Show help                                                                                                                     [boolean]`,`\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Examples`)),mdx(\"p\",null,`Download the providers and modules defined in the `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf.json`),` configuration file.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ `,mdx(\"span\",{parentName:\"code\",\"className\":\"token function\"},`cat`),` cdktf.json`,`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"language\"`),mdx(\"span\",{parentName:\"code\",\"className\":\"token builtin class-name\"},`:`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"typescript\"`),`,`,`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"app\"`),mdx(\"span\",{parentName:\"code\",\"className\":\"token builtin class-name\"},`:`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"node main.js\"`),`,`,`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"terraformProviders\"`),mdx(\"span\",{parentName:\"code\",\"className\":\"token builtin class-name\"},`:`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`[`),mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"aws@~> 2.0\"`),mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`]`),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),`\n`)),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf get`,`\n`)),mdx(\"p\",null,`If you run into issues generating a lot of bindings you can use the `,mdx(\"inlineCode\",{parentName:\"p\"},`--parallelism`),` option to limit the number of bindings generated in parallel.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf get --parallelism `,mdx(\"span\",{parentName:\"code\",\"className\":\"token number\"},`1`),`\n`)),mdx(\"h2\",{\"id\":\"init\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#init\",\"aria-label\":\"init permalink\"},`\\xbb`),`init`),mdx(\"p\",null,`This command creates a new CDK for Terraform project using a template.`),mdx(\"pre\",{\"className\":\"language-sh\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-sh\"},`$ cdktf init --help`,`\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Help Output`)),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`cdktf init`,`\n`,`\n`,`Create a new cdktf project from a template.`,`\n`,`\n`,`Options:`,`\n`,`      --version                                  Show version number                                                                                                           [boolean]`,`\n`,`      --experimental-provider-schema-cache-path  An experimental schema cache that can be used to improve the speed of cdktf get and convert. Supported using the env`,`\n`,`                                                 CDKTF_EXPERIMENTAL_PROVIDER_SCHEMA_CACHE_PATH.                                                                [string] [default: false]`,`\n`,`      --disable-plugin-cache-env                 Dont set TF_PLUGIN_CACHE_DIR automatically. This is useful when the plugin cache is configured differently. Supported using the env`,`\n`,`                                                 CDKTF_DISABLE_PLUGIN_CACHE_ENV.                                                                              [boolean] [default: false]`,`\n`,`      --log-level                                Which log level should be written. Only supported via setting the env CDKTF_LOG_LEVEL                                          [string]`,`\n`,`      --log-file-directory                       The directory path where CDKTF should create \\`cdktf.log\\` and print logs at the \\`debug\\` level. If not set, CDKTF writes logs to standard`,`\n`,`                                                 out at the level specified in \\`CDKTF_LOG_LEVEL\\`. Only supported via setting the env CDKTF_LOG_FILE_DIRECTORY`,`\n`,`      --template                                 The template to be used to create a new project. Either URL to zip file or one of the built-in templates.                      [string]`,`\n`,`      --project-name                             The name of the project.                                                                                                       [string]`,`\n`,`      --project-description                      The description of the project.                                                                                                [string]`,`\n`,`      --dist                                     Install dependencies from a \"dist\" directory (for development)                                                                 [string]`,`\n`,`      --local                                    Use local state storage for generated Terraform.                                                             [boolean] [default: false]`,`\n`,`      --cdktf-version                            The cdktf version to use while creating a new project.                                                      [string] [default: \"0.0.0\"]`,`\n`,`      --from-terraform-project                   Use a terraform project as the basis, CDK constructs will be generated based on the .tf files in the path                      [string]`,`\n`,`      --enable-crash-reporting                   Enable crash reporting for the CLI, refer to https://cdk.tf/crash-reporting for more details                                  [boolean]`,`\n`,`      --providers                                Providers to add to your project                                                                                  [array] [default: []]`,`\n`,`      --providers-force-local                    Force local installation of provider specified in init                                                                        [boolean]`,`\n`,`      --tfe-hostname                             The hostname of the Terraform Enterprise instance to use for remote state storage                                              [string]`,`\n`,`  -h, --help                                     Show help                                                                                                                     [boolean]`,`\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Examples`)),mdx(\"p\",null,`Create a new Typescript project.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf init --template`,mdx(\"span\",{parentName:\"code\",\"className\":\"token operator\"},`=`),mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"typescript\"`),`\n`)),mdx(\"p\",null,`Create a new Python project and use a specific version of the `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf`),` package.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf init --template`,mdx(\"span\",{parentName:\"code\",\"className\":\"token operator\"},`=`),mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"python\"`),` --cdktf-version`,mdx(\"span\",{parentName:\"code\",\"className\":\"token operator\"},`=`),mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"0.0.1\"`),`\n`)),mdx(\"p\",null,`Create a new Typescript project from an existing Terraform codebase. Currently, you can only use the `,mdx(\"inlineCode\",{parentName:\"p\"},`--from-terraform-project`),` flag with TypeScript, and there are some known limitations.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf init --template`,mdx(\"span\",{parentName:\"code\",\"className\":\"token operator\"},`=`),mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"typescript\"`),` --from-terraform-project /path/to/terraform/project`,`\n`)),mdx(\"h2\",{\"id\":\"login\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#login\",\"aria-label\":\"login permalink\"},`\\xbb`),`login`),mdx(\"p\",null,`This command helps log in to HCP Terraform by fetching a HCP Terraform API token.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf login --help`,`\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Help Output`)),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`cdktf login`,`\n`,`\n`,`Retrieves an API token to connect to Terraform Cloud or Terraform Enterprise.`,`\n`,`\n`,`Options:`,`\n`,`      --version                                  Show version number                                                                                                           [boolean]`,`\n`,`      --experimental-provider-schema-cache-path  An experimental schema cache that can be used to improve the speed of cdktf get and convert. Supported using the env`,`\n`,`                                                 CDKTF_EXPERIMENTAL_PROVIDER_SCHEMA_CACHE_PATH.                                                                [string] [default: false]`,`\n`,`      --disable-plugin-cache-env                 Dont set TF_PLUGIN_CACHE_DIR automatically. This is useful when the plugin cache is configured differently. Supported using the env`,`\n`,`                                                 CDKTF_DISABLE_PLUGIN_CACHE_ENV.                                                                              [boolean] [default: false]`,`\n`,`      --log-level                                Which log level should be written. Only supported via setting the env CDKTF_LOG_LEVEL                                          [string]`,`\n`,`      --log-file-directory                       The directory path where CDKTF should create \\`cdktf.log\\` and print logs at the \\`debug\\` level. If not set, CDKTF writes logs to standard`,`\n`,`                                                 out at the level specified in \\`CDKTF_LOG_LEVEL\\`. Only supported via setting the env CDKTF_LOG_FILE_DIRECTORY`,`\n`,`      --tfe-hostname                             The Terraform Enterprise hostname to authenticate against. If you use Terraform Cloud you can leave this on the default.`,`\n`,`                                                                                                                                                  [string] [default: \"app.terraform.io\"]`,`\n`,`  -h, --help                                     Show help                                                                                                                     [boolean]`,`\n`,`\n`,`Examples:`,`\n`,`  cdktf login                                    Takes you through the interactive login process`,`\n`,`  cdktf login --tfe-hostname tfe.my-company.com  Takes you through the interactive login process on your companies Terraform Enterprise instance.`,`\n`,`  cat my-token.txt | cdktf login                 Uses a locally stored token directly, instead of going through the interactive login process`,`\n`)),mdx(\"p\",null,`Please note that we currently expect custom TFE instances to be using the `,mdx(\"inlineCode\",{parentName:\"p\"},`https`),` protocol.`),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Examples`)),mdx(\"p\",null,`Fetch an API token from HCP Terraform.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf login`,`\n`)),mdx(\"h2\",{\"id\":\"synth\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#synth\",\"aria-label\":\"synth permalink\"},`\\xbb`),`synth`),mdx(\"p\",null,`This command synthesizes Terraform configuration for an application. CDKTF stores the synthesized configuration in the `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf.out`),` directory, unless you use the `,mdx(\"inlineCode\",{parentName:\"p\"},`--output`),` flag to specify a different location. The output folder is ephemeral and might be erased for each `,mdx(\"inlineCode\",{parentName:\"p\"},`synth`),` that you run manually or that happens automatically when you run `,mdx(\"inlineCode\",{parentName:\"p\"},`deploy`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`diff`),`, or `,mdx(\"inlineCode\",{parentName:\"p\"},`destroy`),`.`),mdx(\"pre\",{\"className\":\"language-sh\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-sh\"},`$ cdktf synth --help`,`\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Help Output`)),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`cdktf synth`,`\n`,`\n`,`Synthesizes Terraform code for the given app in a directory.`,`\n`,`\n`,`Options:`,`\n`,`      --version                                  Show version number                                                                                                           [boolean]`,`\n`,`      --experimental-provider-schema-cache-path  An experimental schema cache that can be used to improve the speed of cdktf get and convert. Supported using the env`,`\n`,`                                                 CDKTF_EXPERIMENTAL_PROVIDER_SCHEMA_CACHE_PATH.                                                                [string] [default: false]`,`\n`,`      --disable-plugin-cache-env                 Dont set TF_PLUGIN_CACHE_DIR automatically. This is useful when the plugin cache is configured differently. Supported using the env`,`\n`,`                                                 CDKTF_DISABLE_PLUGIN_CACHE_ENV.                                                                              [boolean] [default: false]`,`\n`,`      --log-level                                Which log level should be written. Only supported via setting the env CDKTF_LOG_LEVEL                                          [string]`,`\n`,`      --log-file-directory                       The directory path where CDKTF should create \\`cdktf.log\\` and print logs at the \\`debug\\` level. If not set, CDKTF writes logs to standard`,`\n`,`                                                 out at the level specified in \\`CDKTF_LOG_LEVEL\\`. Only supported via setting the env CDKTF_LOG_FILE_DIRECTORY`,`\n`,`  -a, --app                                      Command to use in order to execute cdktf app                                                           [default: \"npx ts-node main.ts\"]`,`\n`,`  -o, --output                                   Output directory for the synthesized Terraform config                                                            [default: \"cdktf.out\"]`,`\n`,`      --check-code-maker-output                  Should \\`codeMakerOutput\\` existence check be performed? By default it will be checked if providers or modules are configured.`,`\n`,`                                                                                                                                                              [boolean] [default: false]`,`\n`,`      --hcl                                      Should the output be in HCL format?                                                                          [boolean] [default: false]`,`\n`,`  -h, --help                                     Show help                                                                                                                     [boolean]`,`\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Examples`)),mdx(\"p\",null,`Synthesize code for an application.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf synth`,`\n`)),mdx(\"p\",null,`Synthesize code when providing a custom command to execute and an output directory.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf synth --app`,mdx(\"span\",{parentName:\"code\",\"className\":\"token operator\"},`=`),mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"npm compile && node main.js\"`),` --output`,mdx(\"span\",{parentName:\"code\",\"className\":\"token operator\"},`=`),mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"dirname\"`),`\n`)),mdx(\"p\",null,`Synthesize code in Terraform HCL instead of JSON`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf synth --hcl`,`\n`)),mdx(\"h2\",{\"id\":\"watch\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#watch\",\"aria-label\":\"watch permalink\"},`\\xbb`),`watch`),mdx(\"div\",{\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Warning:`),` The `,mdx(\"inlineCode\",{parentName:\"p\"},`watch`),` command is experimental, so you should only use it in development environments. It also automatically deploys all changes without asking for confirmation.`)),mdx(\"p\",null,`When the `,mdx(\"inlineCode\",{parentName:\"p\"},`watch`),` command is first run it creates a `,mdx(\"inlineCode\",{parentName:\"p\"},`watchPattern`),` in your `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf.json`),` based on the language you configured. It's a list of glob patterns matching all files that should be watched.`),mdx(\"p\",null,`Whenever a file matching the watch pattern is changed, the command will run `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf deploy --auto-approve`),` for you. It allows for rapid iterations when developing infrastructure, especially when working with serverless services. You can specify the stacks you want to deploy or you can use `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf watch --auto-approve '*'`),` to deploy all stacks.`),mdx(\"h3\",{\"id\":\"requirements\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#requirements\",\"aria-label\":\"requirements permalink\"},`\\xbb`),`Requirements`),mdx(\"p\",null,`Before using `,mdx(\"inlineCode\",{parentName:\"p\"},`watch`),` you should check your environment. The `,mdx(\"inlineCode\",{parentName:\"p\"},`watch`),` command should only be used for development environments. We recommend making sure that the terminal where you want to run `,mdx(\"inlineCode\",{parentName:\"p\"},`watch`),` has no access keys that allow the `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf-cli`),` to deploy to your production environment.`),mdx(\"h3\",{\"id\":\"run-watch\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#run-watch\",\"aria-label\":\"run watch permalink\"},`\\xbb`),`Run watch`),mdx(\"pre\",{\"className\":\"language-sh\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-sh\"},`$ cdktf watch --help`,`\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Help Output`)),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`cdktf watch [stacks..]`,`\n`,`\n`,`[experimental] Watch for file changes and automatically trigger a deploy`,`\n`,`\n`,`Positionals:`,`\n`,`  stacks  Deploy stacks matching the given ids. Required when more than one stack is present in the app                                                            [array] [default: []]`,`\n`,`\n`,`Options:`,`\n`,`      --version                                  Show version number                                                                                                           [boolean]`,`\n`,`      --experimental-provider-schema-cache-path  An experimental schema cache that can be used to improve the speed of cdktf get and convert. Supported using the env`,`\n`,`                                                 CDKTF_EXPERIMENTAL_PROVIDER_SCHEMA_CACHE_PATH.                                                                [string] [default: false]`,`\n`,`      --disable-plugin-cache-env                 Dont set TF_PLUGIN_CACHE_DIR automatically. This is useful when the plugin cache is configured differently. Supported using the env`,`\n`,`                                                 CDKTF_DISABLE_PLUGIN_CACHE_ENV.                                                                              [boolean] [default: false]`,`\n`,`      --log-level                                Which log level should be written. Only supported via setting the env CDKTF_LOG_LEVEL                                          [string]`,`\n`,`      --log-file-directory                       The directory path where CDKTF should create \\`cdktf.log\\` and print logs at the \\`debug\\` level. If not set, CDKTF writes logs to standard`,`\n`,`                                                 out at the level specified in \\`CDKTF_LOG_LEVEL\\`. Only supported via setting the env CDKTF_LOG_FILE_DIRECTORY`,`\n`,`  -a, --app                                      Command to use in order to execute cdktf app                                                [required] [default: \"npx ts-node main.ts\"]`,`\n`,`  -o, --output                                   Output directory for the synthesized Terraform config                                                 [required] [default: \"cdktf.out\"]`,`\n`,`      --auto-approve                             Auto approve                                                                                                 [boolean] [default: false]`,`\n`,`      --parallelism                              Number of concurrent CDKTF stacks to run. Defaults to infinity, denoted by -1                                    [number] [default: -1]`,`\n`,`      --terraform-parallelism                    Forwards value as the \\`-parallelism\\` flag to Terraform. By default, the this flag is not forwarded to Terraform. Note: This flag is not`,`\n`,`                                                 supported by remote / cloud backend                                                                              [number] [default: -1]`,`\n`,`  -h, --help                                     Show help                                                                                                                     [boolean]`,`\n`)),mdx(\"div\",{\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` The `,mdx(\"inlineCode\",{parentName:\"p\"},`parallelism`),` flag has a different behavior than the `,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cli/commands/apply#parallelism-n\"},`terraform parallelism flag`),`. To set the custom terraform parallelism flag, please use the `,mdx(\"inlineCode\",{parentName:\"p\"},`--terraform-parallelism`),` flag instead.`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Examples`)),mdx(\"p\",null,`Run `,mdx(\"inlineCode\",{parentName:\"p\"},`watch`),` on the development stack (dev). The `,mdx(\"inlineCode\",{parentName:\"p\"},`--auto-approve`),` flag skips the explicit plan approval step and is currently always required.`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`cdktf watch dev --auto-approve`,`\n`)),mdx(\"p\",null,`Besides for the required `,mdx(\"inlineCode\",{parentName:\"p\"},`--auto-approve`),` flag, you can use the same configuration options as in `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf deploy`),`.`),mdx(\"h3\",{\"id\":\"troubleshoot-watch\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#troubleshoot-watch\",\"aria-label\":\"troubleshoot watch permalink\"},`\\xbb`),`Troubleshoot watch`),mdx(\"p\",null,`Set the `,mdx(\"inlineCode\",{parentName:\"p\"},`CDKTF_LOG_LEVEL`),` environment variable to `,mdx(\"inlineCode\",{parentName:\"p\"},`all`),` and set `,mdx(\"inlineCode\",{parentName:\"p\"},`CDKTF_LOG_FILE_DIRECTORY`),` to your projects root directory.`),mdx(\"p\",null,`The debug output is directed to a `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf.log`),` file in your projects root directory. The log contains information about detected file system changes and the actions they triggered.`),mdx(\"p\",null,`The debug output is directed to a `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf.log`),` file in your projects root directory. The log contains information about detected file system changes and the actions they triggered.`),mdx(\"h2\",{\"id\":\"output\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#output\",\"aria-label\":\"output permalink\"},`\\xbb`),`output`),mdx(\"p\",null,`This command gets the outputs defined in the Terraform configuration of the given stack. It uses `,mdx(\"inlineCode\",{parentName:\"p\"},`terraform output`),` under the hood.`),mdx(\"pre\",{\"className\":\"language-sh\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-sh\"},`$ cdktf output --help`,`\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Help Output`)),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`cdktf output [stacks..]`,`\n`,`\n`,`Prints the output of stacks`,`\n`,`\n`,`Positionals:`,`\n`,`  stacks  Get outputs of the stacks matching the given ids. Required when more than one stack is present in the app                                                [array] [default: []]`,`\n`,`\n`,`Options:`,`\n`,`      --version                                  Show version number                                                                                                           [boolean]`,`\n`,`      --experimental-provider-schema-cache-path  An experimental schema cache that can be used to improve the speed of cdktf get and convert. Supported using the env`,`\n`,`                                                 CDKTF_EXPERIMENTAL_PROVIDER_SCHEMA_CACHE_PATH.                                                                [string] [default: false]`,`\n`,`      --disable-plugin-cache-env                 Dont set TF_PLUGIN_CACHE_DIR automatically. This is useful when the plugin cache is configured differently. Supported using the env`,`\n`,`                                                 CDKTF_DISABLE_PLUGIN_CACHE_ENV.                                                                              [boolean] [default: false]`,`\n`,`      --log-level                                Which log level should be written. Only supported via setting the env CDKTF_LOG_LEVEL                                          [string]`,`\n`,`      --log-file-directory                       The directory path where CDKTF should create \\`cdktf.log\\` and print logs at the \\`debug\\` level. If not set, CDKTF writes logs to standard`,`\n`,`                                                 out at the level specified in \\`CDKTF_LOG_LEVEL\\`. Only supported via setting the env CDKTF_LOG_FILE_DIRECTORY`,`\n`,`  -a, --app                                      Command to use in order to execute cdktf app                                                [required] [default: \"npx ts-node main.ts\"]`,`\n`,`  -o, --output                                   Output directory for the synthesized Terraform config                                                 [required] [default: \"cdktf.out\"]`,`\n`,`      --outputs-file                             Path to file where stack outputs will be written as JSON                                                                       [string]`,`\n`,`      --outputs-file-include-sensitive-outputs   Whether to include sensitive outputs in the output file                                                      [boolean] [default: false]`,`\n`,`      --skip-synth                               Skip synthesis of the application, assume the synthesized Terraform code is already present and up to date   [boolean] [default: false]`,`\n`,`  -h, --help                                     Show help                                                                                                                     [boolean]`,`\n`,`➜`,`\n`)),mdx(\"h3\",{\"id\":\"outputs-file\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#outputs-file\",\"aria-label\":\"outputs file permalink\"},`\\xbb`),mdx(\"inlineCode\",{parentName:\"h3\"},`--outputs-file`)),mdx(\"p\",null,`The `,mdx(\"inlineCode\",{parentName:\"p\"},`--outputs-file`),` option allows you to specify a file where the stack outputs will be written as JSON.\nThe JSONs structure is matching your construct structure, the name of each construct is used as a key.`),mdx(\"pre\",{\"className\":\"language-jsonc\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-jsonc\"},`{`,`\n`,`  \"MyStack\": {`,`\n`,`    \"MyConstructInstance\": {`,`\n`,`      \"MyOutput\": \"my-value\",`,`\n`,`      \"MySecretOutput\": \"my-secret-value\" // not present if --outputs-file-include-sensitive-outputs is not set`,`\n`,`    }`,`\n`,`  }`,`\n`,`}`,`\n`)),mdx(\"p\",null,`Please be aware that sensitive outputs are only written to the file if the `,mdx(\"inlineCode\",{parentName:\"p\"},`--outputs-file-include-sensitive-outputs`),` option is used.`),mdx(\"h2\",{\"id\":\"debug\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#debug\",\"aria-label\":\"debug permalink\"},`\\xbb`),`debug`),mdx(\"p\",null,`This command prints debug information about the current project and environment to help troubleshoot issues.`),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Help Output`)),mdx(\"pre\",{\"className\":\"language-sh\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-sh\"},`$ cdktf debug --help`,`\n`,`\n`,`cdktf debug`,`\n`,`\n`,`Get debug information about the current project and environment`,`\n`,`\n`,`Options:`,`\n`,`      --version                                  Show version number                                                                                                           [boolean]`,`\n`,`      --experimental-provider-schema-cache-path  An experimental schema cache that can be used to improve the speed of cdktf get and convert. Supported using the env`,`\n`,`                                                 CDKTF_EXPERIMENTAL_PROVIDER_SCHEMA_CACHE_PATH.                                                                [string] [default: false]`,`\n`,`      --disable-plugin-cache-env                 Dont set TF_PLUGIN_CACHE_DIR automatically. This is useful when the plugin cache is configured differently. Supported using the env`,`\n`,`                                                 CDKTF_DISABLE_PLUGIN_CACHE_ENV.                                                                              [boolean] [default: false]`,`\n`,`      --log-level                                Which log level should be written. Only supported via setting the env CDKTF_LOG_LEVEL                                          [string]`,`\n`,`      --log-file-directory                       The directory path where CDKTF should create \\`cdktf.log\\` and print logs at the \\`debug\\` level. If not set, CDKTF writes logs to standard`,`\n`,`                                                 out at the level specified in \\`CDKTF_LOG_LEVEL\\`. Only supported via setting the env CDKTF_LOG_FILE_DIRECTORY`,`\n`,`      --json                                     If set, output will be in JSON format.                                                                       [boolean] [default: false]`,`\n`,`  -h, --help                                     Show help                                                                                                                     [boolean]`,`\n`)),mdx(\"p\",null,`The debug information depends on the programming language. The following example is from a Java application, where CDKTF collects information about Java, Gradle, and Maven. CDKTF detects the installed `,mdx(\"inlineCode\",{parentName:\"p\"},`constructs`),` version through Gradle.`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`$ cdktf debug`,`\n`,`cdktf debug`,`\n`,`language: java`,`\n`,`cdktf-cli: 0.20.1`,`\n`,`node: v18.12.0`,`\n`,`cdktf: 0.20.1`,`\n`,`constructs: 10.1.167`,`\n`,`jsii: null`,`\n`,`terraform: 1.4.0`,`\n`,`arch: x64`,`\n`,`os: darwin 22.6.0`,`\n`,`java:`,`\n`,`maven: Apache Maven 3.9.3 (21122926829f1ead511c958d89bd2f672198ae9f)Maven home: /usr/local/Cellar/maven/3.9.3/libexecJava version: 20.0.1, vendor: Homebrew, runtime: /usr/local/Cellar/openjdk/20.0.1/libexec/openjdk.jdk/Contents/HomeDefault locale: en_DE, platform encoding: UTF-8OS name: \"mac os x\", version: \"13.5.2\", arch: \"x86_64\", family: \"mac\"`,`\n`,`gradle: ------------------------------------------------------------Gradle 8.2.1------------------------------------------------------------Build time:   2023-07-10 12:12:35 UTCRevision:     a38ec64d3c4612da9083cc506a1ccb212afeecaaKotlin:       1.8.20Groovy:       3.0.17Ant:          Apache Ant(TM) version 1.10.13 compiled on January 4 2023JVM:          20.0.1 (Homebrew 20.0.1)OS:           Mac OS X 13.5.2 x86_64`,`\n`,`providers`,`\n`,`kreuzwerker/docker@~>2.0 (LOCAL)`,`\n`,`        terraform provider version: 2.25.0`,`\n`,`com.hashicorp.cdktf-provider-ad (PREBUILT)`,`\n`,`        terraform provider version: 0.4.4`,`\n`,`        prebuilt provider version: 8.0.0`,`\n`,`        cdktf version: ^0.20.0`,`\n`)),mdx(\"h2\",{\"id\":\"provider-add\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#provider-add\",\"aria-label\":\"provider add permalink\"},`\\xbb`),`provider add`),mdx(\"p\",null,`This command facilitates adding Terraform providers to a CDKTF project. If a `,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cdktf/concepts/providers#install-pre-built-providers\"},`pre-built provider`),` is available for the CDKTF version you are using and the Terraform provider version you requested (if any), it will be installed using e.g. `,mdx(\"inlineCode\",{parentName:\"p\"},`npm install`),` or `,mdx(\"inlineCode\",{parentName:\"p\"},`dotnet add`),` depending on the language you are using. Otherwise, the provider will be added to the `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf.json`),` config and `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf get`),` will be automatically invoked to generate `,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cdktf/concepts/providers#add-provider-to-cdktf-json\"},`local provider bindings`),`.`),mdx(\"pre\",{\"className\":\"language-sh\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-sh\"},`$ cdktf provider add --help`,`\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Help Output`)),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`cdktf provider add <provider...>`,`\n`,`\n`,`Add one or more Terraform providers to your project.`,`\n`,`\n`,`Positionals:`,`\n`,`  provider  Name of the provider to add. Can include a version constraint (e.g. aws@~>4.0).                                                             [array] [required] [default: []]`,`\n`,`\n`,`Options:`,`\n`,`      --version                                  Show version number                                                                                                           [boolean]`,`\n`,`      --experimental-provider-schema-cache-path  An experimental schema cache that can be used to improve the speed of cdktf get and convert. Supported using the env`,`\n`,`                                                 CDKTF_EXPERIMENTAL_PROVIDER_SCHEMA_CACHE_PATH.                                                                [string] [default: false]`,`\n`,`      --disable-plugin-cache-env                 Dont set TF_PLUGIN_CACHE_DIR automatically. This is useful when the plugin cache is configured differently. Supported using the env`,`\n`,`                                                 CDKTF_DISABLE_PLUGIN_CACHE_ENV.                                                                              [boolean] [default: false]`,`\n`,`      --log-level                                Which log level should be written. Only supported via setting the env CDKTF_LOG_LEVEL                                          [string]`,`\n`,`      --log-file-directory                       The directory path where CDKTF should create \\`cdktf.log\\` and print logs at the \\`debug\\` level. If not set, CDKTF writes logs to standard`,`\n`,`                                                 out at the level specified in \\`CDKTF_LOG_LEVEL\\`. Only supported via setting the env CDKTF_LOG_FILE_DIRECTORY`,`\n`,`      --force-local                              force local provider installation, even if pre-built provider exists                                                          [boolean]`,`\n`,`  -h, --help                                     Show help                                                                                                                     [boolean]`,`\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Examples`)),mdx(\"p\",null,`Add the `,mdx(\"inlineCode\",{parentName:\"p\"},`aws`),` provider to the project. As the namespace of the AWS Terraform provider is `,mdx(\"inlineCode\",{parentName:\"p\"},`hashicorp`),` it can be left out.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf provider `,mdx(\"span\",{parentName:\"code\",\"className\":\"token function\"},`add`),` aws`,`\n`)),mdx(\"p\",null,`Add a specific version of the `,mdx(\"inlineCode\",{parentName:\"p\"},`aws`),` provider to the project. You can use the `,mdx(\"inlineCode\",{parentName:\"p\"},`@`),` symbol to specify a `,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/language/providers/requirements#version-constraints\"},`version constraint`),`.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf provider `,mdx(\"span\",{parentName:\"code\",\"className\":\"token function\"},`add`),` aws@~`,mdx(\"span\",{parentName:\"code\",\"className\":\"token operator\"},`>`),mdx(\"span\",{parentName:\"code\",\"className\":\"token number\"},`4.0`),`\n`)),mdx(\"p\",null,`Add multiple providers to the project and force local generation of provider bindings.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf provider `,mdx(\"span\",{parentName:\"code\",\"className\":\"token function\"},`add`),` kreuzwerker/docker google --force-local`,`\n`)),mdx(\"p\",null,`Add a provider from a private registry to the project.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf provider `,mdx(\"span\",{parentName:\"code\",\"className\":\"token function\"},`add`),` registry.example.com/acme/my-provider`,`\n`)),mdx(\"h2\",{\"id\":\"provider-upgrade\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#provider-upgrade\",\"aria-label\":\"provider upgrade permalink\"},`\\xbb`),`provider upgrade`),mdx(\"p\",null,`This command lets you upgrade Terraform providers in a CDKTF project to the newest version compatible with your `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf`),` version. You can also optionally add a version constraint.`),mdx(\"p\",null,`If your project has the associated `,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cdktf/concepts/providers#install-pre-built-providers\"},`pre-built provider`),` already installed, CDKTF updates the pre-built provider. Otherwise, CDKTF adds the provider to the `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf.json`),` configuration file and invokes `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf get`),` to generate `,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cdktf/concepts/providers#add-provider-to-cdktf-json\"},`local provider bindings`),`.`),mdx(\"pre\",{\"className\":\"language-sh\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-sh\"},`$ cdktf provider upgrade --help`,`\n`,`cdktf provider upgrade <provider...>`,`\n`,`\n`,`Upgrade one or more Terraform providers in your project to the newest version compatible with your CDKTF version.`,`\n`,`If your project has the associated pre-built provider already installed, CDKTF updates the pre-built provider. Otherwise, CDKTF adds the specified provider to the cdktf.json`,`\n`,`configuration file and generates local provider bindings.`,`\n`,`\n`,`Positionals:`,`\n`,`  provider  Name of the provider to upgrade. Can include a version constraint (e.g. aws@~>4.0).                                                         [array] [required] [default: []]`,`\n`,`\n`,`Options:`,`\n`,`      --version                                  Show version number                                                                                                           [boolean]`,`\n`,`      --experimental-provider-schema-cache-path  An experimental schema cache that can be used to improve the speed of cdktf get and convert. Supported using the env`,`\n`,`                                                 CDKTF_EXPERIMENTAL_PROVIDER_SCHEMA_CACHE_PATH.                                                                [string] [default: false]`,`\n`,`      --disable-plugin-cache-env                 Dont set TF_PLUGIN_CACHE_DIR automatically. This is useful when the plugin cache is configured differently. Supported using the env`,`\n`,`                                                 CDKTF_DISABLE_PLUGIN_CACHE_ENV.                                                                              [boolean] [default: false]`,`\n`,`      --log-level                                Which log level should be written. Only supported via setting the env CDKTF_LOG_LEVEL                                          [string]`,`\n`,`      --log-file-directory                       The directory path where CDKTF should create \\`cdktf.log\\` and print logs at the \\`debug\\` level. If not set, CDKTF writes logs to standard`,`\n`,`                                                 out at the level specified in \\`CDKTF_LOG_LEVEL\\`. Only supported via setting the env CDKTF_LOG_FILE_DIRECTORY`,`\n`,`  -h, --help                                     Show help                                                                                                                     [boolean]`,`\n`)),mdx(\"h2\",{\"id\":\"provider-list\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#provider-list\",\"aria-label\":\"provider list permalink\"},`\\xbb`),`provider list`),mdx(\"p\",null,`This command prints out a table (or json with the `,mdx(\"inlineCode\",{parentName:\"p\"},`--json`),` option) containing details about the providers installed for the project. It gathers information for both locally built and pre-built providers.`),mdx(\"p\",null,`Information printed varies between locally generated and prebuilt providers. The information for each provider includes the Terraform provider version, the CDKTF version, and the package name and version (if pre-built provider).`),mdx(\"pre\",{\"className\":\"language-sh\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-sh\"},`$ cdktf provider list --help`,`\n`,`cdktf provider list [flags]`,`\n`,`\n`,`List installed providers`,`\n`,`\n`,`Options:`,`\n`,`      --version                                  Show version number                                                                                                           [boolean]`,`\n`,`      --experimental-provider-schema-cache-path  An experimental schema cache that can be used to improve the speed of cdktf get and convert. Supported using the env`,`\n`,`                                                 CDKTF_EXPERIMENTAL_PROVIDER_SCHEMA_CACHE_PATH.                                                                [string] [default: false]`,`\n`,`      --disable-plugin-cache-env                 Dont set TF_PLUGIN_CACHE_DIR automatically. This is useful when the plugin cache is configured differently. Supported using the env`,`\n`,`                                                 CDKTF_DISABLE_PLUGIN_CACHE_ENV.                                                                              [boolean] [default: false]`,`\n`,`      --log-level                                Which log level should be written. Only supported via setting the env CDKTF_LOG_LEVEL                                          [string]`,`\n`,`      --log-file-directory                       The directory path where CDKTF should create \\`cdktf.log\\` and print logs at the \\`debug\\` level. If not set, CDKTF writes logs to standard`,`\n`,`                                                 out at the level specified in \\`CDKTF_LOG_LEVEL\\`. Only supported via setting the env CDKTF_LOG_FILE_DIRECTORY`,`\n`,`      --json                                     get providers list as json                                                                                   [boolean] [default: false]`,`\n`,`  -h, --help                                     Show help                                                                                                                     [boolean]`,`\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Help Output`)),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`cdktf provider upgrade <provider...>`,`\n`,`\n`,`Upgrade one or more Terraform providers in your project to the newest version compatible with your CDKTF version.`,`\n`,`If your project has the associated pre-built provider already installed, CDKTF updates the pre-built provider. Otherwise, CDKTF adds the specified provider to the cdktf.json`,`\n`,`configuration file and generates local provider bindings.`,`\n`,`\n`,`Positionals:`,`\n`,`  provider  Name of the provider to upgrade. Can include a version constraint (e.g. aws@~>4.0).                                                         [array] [required] [default: []]`,`\n`,`\n`,`Options:`,`\n`,`      --version                                  Show version number                                                                                                           [boolean]`,`\n`,`      --experimental-provider-schema-cache-path  An experimental schema cache that can be used to improve the speed of cdktf get and convert. Supported using the env`,`\n`,`                                                 CDKTF_EXPERIMENTAL_PROVIDER_SCHEMA_CACHE_PATH.                                                                [string] [default: false]`,`\n`,`      --disable-plugin-cache-env                 Dont set TF_PLUGIN_CACHE_DIR automatically. This is useful when the plugin cache is configured differently. Supported using the env`,`\n`,`                                                 CDKTF_DISABLE_PLUGIN_CACHE_ENV.                                                                              [boolean] [default: false]`,`\n`,`      --log-level                                Which log level should be written. Only supported via setting the env CDKTF_LOG_LEVEL                                          [string]`,`\n`,`      --log-file-directory                       The directory path where CDKTF should create \\`cdktf.log\\` and print logs at the \\`debug\\` level. If not set, CDKTF writes logs to standard`,`\n`,`                                                 out at the level specified in \\`CDKTF_LOG_LEVEL\\`. Only supported via setting the env CDKTF_LOG_FILE_DIRECTORY`,`\n`,`  -h, --help                                     Show help                                                                                                                     [boolean]`,`\n`)),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},`Examples`)),mdx(\"p\",null,`Upgrade the `,mdx(\"inlineCode\",{parentName:\"p\"},`aws`),` provider to the newest version available for your `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf`),` version.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf provider `,mdx(\"span\",{parentName:\"code\",\"className\":\"token function\"},`add`),` aws`,`\n`)),mdx(\"p\",null,`Upgrade the `,mdx(\"inlineCode\",{parentName:\"p\"},`aws`),` provider to the newest version available for your `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf`),` version and at version `,mdx(\"inlineCode\",{parentName:\"p\"},`4`),` of the provider version.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf provider `,mdx(\"span\",{parentName:\"code\",\"className\":\"token function\"},`add`),` aws@~`,mdx(\"span\",{parentName:\"code\",\"className\":\"token operator\"},`>`),mdx(\"span\",{parentName:\"code\",\"className\":\"token number\"},`4.0`),`\n`)),mdx(\"p\",null,`Upgrade multiple providers to the latest version available for your `,mdx(\"inlineCode\",{parentName:\"p\"},`cdktf`),` version.`),mdx(\"pre\",{\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},`$ cdktf provider `,mdx(\"span\",{parentName:\"code\",\"className\":\"token function\"},`add`),` kreuzwerker/docker google`,`\n`)))};MDXContent.isMDXComponent=true;","scope":{"version":"latest"}},"product":{"slug":"terraform","name":"Terraform","algoliaConfig":{"indexName":"product_TERRAFORM"},"alertBannerActive":true,"alertBanner":{"tag":"New","url":"https://www.hashicorp.com/blog/introducing-the-infrastructure-cloud","text":"Terraform Cloud is now HCP Terraform","linkText":"Read more →","expirationDate":"2024-04-29T00:00:00-08:00"},"basePaths":["cdktf","cli","cloud-docs","cloud-docs/agents","docs","enterprise","internals","intro","language","plugin","plugin/framework","plugin/log","plugin/mux","plugin/sdkv2","plugin/testing","registry","downloads"],"docsNavItems":["docs","language","cli","cloud-docs","enterprise","cdktf",{"icon":"provider","label":"Provider Use","fullPath":"/terraform/language/providers"},"plugin","registry",{"icon":"handshake","label":"Integration Program","fullPath":"/terraform/docs/partnerships"}],"rootDocsPaths":[{"iconName":"code","name":"CDK for Terraform","path":"cdktf","productSlugForLoader":"terraform-cdk"},{"iconName":"terminal-screen","name":"Terraform CLI","path":"cli"},{"iconName":"cloud","name":"HCP Terraform","path":"cloud-docs","productSlugForLoader":"terraform-docs-common"},{"iconName":"cloud","name":"Cloud Docs Agents","navDataPrefix":"cloud-docs-agents","path":"cloud-docs/agents","productSlugForLoader":"terraform-docs-agents"},{"iconName":"docs","name":"About the Docs","path":"docs","productSlugForLoader":"terraform-docs-common"},{"iconName":"org","name":"Terraform Enterprise","path":"enterprise","productSlugForLoader":"ptfe-releases"},{"iconName":"docs","name":"Internals","path":"internals"},{"iconName":"docs","name":"Intro","path":"intro"},{"iconName":"file-source","name":"Configuration Language","path":"language"},{"iconName":"wrench","name":"Plugin Development","path":"plugin","productSlugForLoader":"terraform-docs-common"},{"iconName":"plug","name":"Framework","navDataPrefix":"plugin-framework","path":"plugin/framework","productSlugForLoader":"terraform-plugin-framework"},{"iconName":"plug","name":"Logging","navDataPrefix":"plugin-log","path":"plugin/log","productSlugForLoader":"terraform-plugin-log"},{"iconName":"plug","name":"Combining and Translating","navDataPrefix":"plugin-mux","path":"plugin/mux","productSlugForLoader":"terraform-plugin-mux"},{"iconName":"plug","name":"SDKv2","path":"plugin/sdkv2","productSlugForLoader":"terraform-plugin-sdk","navDataPrefix":"plugin-sdkv2"},{"iconName":"plug","name":"Testing","path":"plugin/testing","productSlugForLoader":"terraform-plugin-testing","navDataPrefix":"plugin-testing"},{"iconName":"plus-circle","name":"Registry Publishing","path":"registry","productSlugForLoader":"terraform-docs-common"}],"currentRootDocsPath":{"iconName":"code","name":"CDK for Terraform","path":"cdktf","productSlugForLoader":"terraform-cdk"}},"projectName":"CDK For Terraform","versions":null},"__N_SSG":true}